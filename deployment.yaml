apiVersion : apps/v1
kind: Deployment
metadata:
  name: telebot-deployment-autoscaling
  labels:
    app : telebot-deployment
spec:
  selector:
    matchLabels:
      project: test-telegram-bot
  template:
    metadata:
      labels:
        project: test-telegram-bot
    spec:
      containers:
        - name : telebot
          image: gcr.io/netcracker-devops/telebot:latest
          imagePullPolicy: Always
      #    command: [ "/bin/sh", "-c", "cp /var/lib/jenkins/workspace/test_telebot/config_k8s.py /usr/src/app/config_k8s.py" ]
      #    ports:
      #      - containerPort: 80
      #    volumeMounts:
      #      - name: my-config
      #        mountPath: /usr/src/app/config_k8s.py
      #volumes:
      #  - name: my-config
      #    configMap:
      #        name: my-config
      #restartPolicy: Always


    #        - mountPath: /usr/src/app/config_k8s.py
    #          name: data
    #        - mountPath: /var/lib/jenkins/workspace/test_telebot/config_k8s.py
    #          name: config
    #  initContainers:
    #    - name: copy
    #      image: gcr.io/netcracker-devops/telebot:latest
    #      command: ["bash", "-c", "cp /var/lib/jenkins/workspace/test_telebot/config_k8s.py /usr/src/app/"]
    #      volumeMounts:
    #        - mountPath: /usr/src/app/
    #          name: config
    # volumes:
    # - name: data
    #   emptyDir: {}
    #    - name: config
    #      configMap:
    #        name: kuberex-config
    #       items:
    #       - key: kuber-config
    #         path: config_k8s.py
              



#          volumeMounts:
#             - name: kube-config
#               mountPath: /usr/src/app/config_k8s.py                           
#      volumes:
#        - name: kube-config
  #        configMap:
  #             name: kube-config
  #    restartPolicy: Always
#          hostPath:
#              path: /var/lib/jenkins/workspace/test_telebot/config_k8s.py
#              type: File
        
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: telebot-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v2beta1v1
    kind: Deployment
    name: telebot-deployment-autoscaling
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 70
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 80

---
apiVersion: v1
kind: Service
metadata:
  name: telebot-autoscaling-pod-service
  labels:
     env  : test
     owner: NetcrackerSchoolAlexTeam
spec:
  selector:
    project: test-telegram-bot      
  ports:
    - name      : app-listener
      protocol  : TCP
      port      : 80  # Port on Load Balancer
      targetPort: 80  # Port on Pod
  type: LoadBalancer

#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: config-kuber
#type:   Opaque
#date: 

